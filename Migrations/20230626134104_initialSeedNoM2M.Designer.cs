// <auto-generated />
using System;
using FinalAssignmentWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalAssignmentWebAPI.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    [Migration("20230626134104_initialSeedNoM2M")]
    partial class initialSeedNoM2M
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("CharactersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("CharacterMovie");
                });

            modelBuilder.Entity("FinalAssignmentWebAPI.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Blade Runner",
                            Gender = "Male",
                            Name = "Rick Deckard",
                            Picture = "https://static.wikia.nocookie.net/bladerunner/images/e/ed/Deck.jpg/revision/latest?cb=20220616043815"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "N7FAA52318",
                            Gender = "Female",
                            Name = "Rachael",
                            Picture = "https://static.wikia.nocookie.net/bladerunner/images/c/ca/Rachael_Voight-Kampff_Test.jpg/revision/latest/scale-to-width-down/1000?cb=20220613123504"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "N6MAA10816",
                            Gender = "Male",
                            Name = "Roy Batty",
                            Picture = "https://static.wikia.nocookie.net/bladerunner/images/c/c6/Roy_Batty_new.jpg/revision/latest?cb=20190301233437"
                        });
                });

            modelBuilder.Entity("FinalAssignmentWebAPI.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Contains the movies of the Dune franchise",
                            Name = "Dune"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Contains the movies of the Blade Runner franchise",
                            Name = "Blade Runner"
                        });
                });

            modelBuilder.Entity("FinalAssignmentWebAPI.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovieTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Denis Villeneuve",
                            FranchiseId = 1,
                            Genre = "Sci-fi",
                            MovieTitle = "Dune",
                            Picture = "https://cdn.entries.clios.com/styles/clio_aotw_ems_image_details_retina/s3/entry_attachments/image/72/2297/22197/122278/noif6bM212YhBupvTTAoRBZPy7rnN7gLiFiwUeVaSBg.jpg",
                            ReleaseYear = 2017,
                            Trailer = "https://www.youtube.com/watch?v=8g18jFHCLXk"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Denis Villeneuve",
                            FranchiseId = 2,
                            Genre = "Sci-fi",
                            MovieTitle = "Blade Runner 2049",
                            Picture = "https://alternativemovieposters.com/wp-content/uploads/2022/11/Matt-Ferguson_BladeRunner.jpg",
                            ReleaseYear = 2021,
                            Trailer = "https://www.youtube.com/watch?v=gCcx85zbxz4"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Denis Villeneuve",
                            FranchiseId = 1,
                            Genre = "Sci-fi",
                            MovieTitle = "Dune: Part Two",
                            Picture = "https://mlpnk72yciwc.i.optimole.com/cqhiHLc.IIZS~2ef73/w:auto/h:auto/q:75/https://bleedingcool.com/wp-content/uploads/2023/05/DUNE2_VERT_Tsr_2764x4096_DOM_REV.jpg",
                            ReleaseYear = 2023,
                            Trailer = "https://www.youtube.com/watch?v=Way9Dexny3w"
                        },
                        new
                        {
                            Id = 4,
                            Director = "Ridley Scott",
                            FranchiseId = 2,
                            Genre = "Sci-fi",
                            MovieTitle = "Blade Runner",
                            Picture = "https://i.redd.it/lg5vx7dnwkd51.jpg",
                            ReleaseYear = 1982,
                            Trailer = "https://www.youtube.com/watch?v=eogpIG53Cis"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("FinalAssignmentWebAPI.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalAssignmentWebAPI.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalAssignmentWebAPI.Models.Movie", b =>
                {
                    b.HasOne("FinalAssignmentWebAPI.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("FinalAssignmentWebAPI.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
